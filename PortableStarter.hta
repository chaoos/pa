 <!DOCTYPE html> 
<html>
<head>
<title>Windows Potable Firefox</title>
<HTA:APPLICATION
  APPLICATIONNAME="Windows Potable Firefox"
  ID="objPortableFF"
  VERSION="1.0"
  BORDER="none"
  INNERBORDER="no"
  CAPTION="no"
  MAXIMIZEBUTTON="no"
  MINIMIZEBUTTON="no"
  ICON="appicon.ico"
  SCROLL="no"
  SINGLEINSTANCE="yes"
  SHOWINTASKBAR="yes"
  CONTEXTMENU="no"
  SELECTION="no"/>

<style>
  p {
    font-family: arial,helvetica,verdana;
    font-size: 12px;
    font-weight: normal;
    text-decoration: none;
    font-style: normal;
    color: #FFBC00;
	text-align:left;
  }
  div {
    position: absolute;
    top: 260px;
    left: 40px;
  }
</style>

</head>

<script language="VBScript">

' Windows.hta - Start Firefox Portable
'
' Author: Roman Gruber <roman.gruber@bwzofingen.ch>
' Version: 1.0
' Called by: user
' Calls: firefox.exe, 
' Description: Examines the Drive Letter of the USB Device and changes
'              the path of the Spice URL Handler in the file mimeTypes.rdf.
'              Then it starts Firefox Porable with the -no-remote option.
'
' Changelog: 03.12.2014 - roman.gruber@bwzofingen.ch
'             - initial version 1.0
'

' function to sleep amount of seconds
Sub sleep(strSeconds)
  set objShell = createobject("wscript.shell")
  ' Ping... there is no better method...
  objShell.run "ping -n " & strSeconds & " 127.0.0.1>nul", 0, true
End Sub

' This function returns a value read from an INI file
' Arguments:
' strFilePath  [string]  the (path and) file name of the INI file
' strSection   [string]  the section in the INI file to be searched
' strKey       [string]  the key whose value is to be returned
'
' Returns:
' string value for the specified key in the specified section
Function GetInivalue(strFilePath,strSection,strKey)

  Dim intEqualPos, objFSO, objIniFile, strLeftString, strLine

  Set objFSO = CreateObject( "Scripting.FileSystemObject" )

  GetInivalue = ""

  If objFSO.FileExists( strFilePath ) Then
    Set objIniFile = objFSO.OpenTextFile( strFilePath, 1, False )
    Do While objIniFile.AtEndOfStream = False
      strLine = Trim( objIniFile.ReadLine )

      ' Check if section is found in the current line
      If LCase( strLine ) = "[" & LCase( strSection ) & "]" Then
        strLine = Trim( objIniFile.ReadLine )

        ' Parse lines until the next section is reached
        Do While Left( strLine, 1 ) <> "["
          ' Find position of equal sign in the line
          intEqualPos = InStr( 1, strLine, "=", 1 )
          If intEqualPos > 0 Then
            strLeftString = Trim( Left( strLine, intEqualPos - 1 ) )
            ' Check if item is found in the current line
            If LCase( strLeftString ) = LCase( strKey ) Then
              GetInivalue = Trim( Mid( strLine, intEqualPos + 1 ) )
			  GetInivalue = Replace(GetInivalue, """", "")
              ' Abort loop when item is found
              Exit Do
            End If
          End If

          ' Abort if the end of the INI file is reached
          If objIniFile.AtEndOfStream Then Exit Do

          ' Continue with next line
          strLine = Trim( objIniFile.ReadLine )
          Loop
        Exit Do
      End If
    Loop
    objIniFile.Close
  End If
End Function

sub window_onLoad

  ' before firefox starts, show a slapsh screen in the center of the window
  window.resizeTo 450,318
  window.moveTo ((screen.width-450)/2), ((screen.height-318)/2)

  Dim sho
  Dim fso
  Set sho = CreateObject("Wscript.Shell")
  set fso = CreateObject("Scripting.FileSystemObject")

  ' Get the USB Drive Letter
  dim CurrentDirectory
  CurrentDirectory = fso.GetAbsolutePathName(".")
  DriveLetter = fso.GetDriveName(CurrentDirectory)

  ' The Ini File
  IniFile = fso.BuildPath(DriveLetter, "\.data\config\settings.conf")

  StartPage = GetInivalue( IniFile, "General", "StartPage" )

  ' Executable file of Firefox
  FirefoxBinary = fso.BuildPath(DriveLetter, GetInivalue( IniFile, "Windows", "FirefoxBinary" ))

  ' The Handler script
  FirefoxSpiceURLHandler = fso.BuildPath(DriveLetter, GetInivalue( IniFile, "Windows", "FirefoxSpiceURLHandler" ))

  ' Profile Directory of the Firefox Profile
  FirefoxProfileDir = fso.BuildPath(DriveLetter, GetInivalue( IniFile, "Windows", "FirefoxProfileDir" ))
  FirefoxDefaultProfile = fso.BuildPath(DriveLetter, GetInivalue( IniFile, "Windows", "FirefoxDefaultProfile" ))

  ' If it doesn't exits create it
  If Not (fso.FolderExists(FirefoxProfileDir)) Then
	' The copy default profile files (cert_override.txt, etc...) to the new profile
	fso.CopyFolder FirefoxDefaultProfile, FirefoxProfileDir, True
  End If

  ' The mimeTypes.rdf paths
  FirefoxMimetypes = fso.BuildPath(DriveLetter, GetInivalue( IniFile, "Windows", "FirefoxMimetypes" ))
  FirefoxMimetypesTarget = fso.BuildPath(FirefoxProfileDir, "mimeTypes.rdf")

  ' Read the contents of the mimeTypes.rdf source file
  Set objFile = fso.OpenTextFile(FirefoxMimetypes, 1)
  content = objFile.ReadAll
  objFile.Close

  ' Replace the placeholder with the actual path and save the file in the profile dir
  new_content = Replace(content, "__INSERT_REMOTE_VIEWER_PATH_HERE__", FirefoxSpiceURLHandler)
  Set objFile = fso.CreateTextFile(FirefoxMimetypesTarget,True)
  objFile.WriteLine new_content
  objFile.Close

  FirefoxArgs = GetInivalue( IniFile, "Windows", "FirefoxArgs" )

  document.getElementById("progress").innerHTML = "Firefox starting..."
  ' Run Firefox
  sho.Run(FirefoxBinary & " " & FirefoxArgs & " -profile " & chr(34) & FirefoxProfileDir & chr(34) & " " & chr(34) & StartPage & chr(34))

  sleep(3)
  self.close

End Sub

</script>

<body background="\.data\win\splash.jpg" alt="Please wait..." />
<div><p id="progress">Please wait...</p></div>
</body>
<html>
